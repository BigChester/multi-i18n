name: Build and Release

on: push

jobs:
  Build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt

      - name: Build project
        run: |
          pyinstaller multi_i18n.spec

      - name: Archive production artifacts
        run: |
          cp -r templates/ dist/
          cp README.md LICENSE dist/

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.os }}-multi_i18n-${GITHUB_REF#refs/tags/}
          path: dist/

  Release:
    needs: Build

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download production artifacts
        uses: actions/download-artifact@v4
        with:
          path: my-artifact
          pattern: my-artifact-*
          merge-multiple: true
      - run: ls -R my-artifact

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          files: |
            my-artifact/binary*
          draft: true
          prerelease: false
