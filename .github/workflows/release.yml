name: Build and Release

on:
  push:
    tags:
      - 'v*'
      - 'V*'

jobs:
  Build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt

      - name: Build project
        run: |
          pyinstaller multi_i18n.spec

      - name: Copy production to artifacts
        run: |
          cp -r templates/ dist/
          cp README.md LICENSE dist/

      - name: Get version
        id: get_version
        run: |
          VERSION=$(git describe --tags)
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ matrix.os }}-multi_i18n-${{ steps.get_version.outputs.VERSION }}
          path: dist/

  Release:
    needs: Build

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download production artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifact
          pattern: artifact-*
      - run: ls -R artifact

      - name: Archive production artifacts
        run: |
          cd artifact
          for dir in artifact-*-multi_i18n-*; do
            tar -czf "${dir}.tar.gz" "$dir"
          done
          cd ..

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          files: |
            artifact/artifact-*-multi_i18n-*.tar.gz
          draft: false
          prerelease: false
