name: Build and Release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt

      - name: Build project
        run: |
          pyinstaller multi_i18n.spec

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: multi_i18n
          path: dist/multi_i18n

  Release:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download production artifacts
        uses: actions/download-artifact@v4
        with:
          name: multi_i18n
          path: dist/multi_i18n

      - name: Load Release Config
        id: release_config
        run: |
          echo "version=$(python3 -c 'import yaml; print(yaml.safe_load(open("release-config.yml"))["version"])')" >> $GITHUB_OUTPUT
          echo "name=$(python3 -c 'import yaml; print(yaml.safe_load(open("release-config.yml"))["name"])')" >> $GITHUB_OUTPUT
          echo "description<<EOF" >> $GITHUB_OUTPUT
          python3 -c 'import yaml; print(yaml.safe_load(open("release-config.yml"))["description"])' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_config.outputs.version }}
          name: Release ${{ steps.release_config.outputs.name }}
          body: ${{ steps.release_config.outputs.description }}
          draft: true
          prerelease: false

      - name: Upload artifacts to GitHub Releases
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: dist/multi_i18n
          asset_name: multi_i18n.zip
          asset_content_type: application/zip
